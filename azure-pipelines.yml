# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
  strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'


- script: |
   wget https://github.com/github/codeql-action/releases/latest/download/codeql-runner-linux
   chmod +x codeql-runner-linux
  displayName: 'Get latest CodeQL package. Install on Agent.'

- script: |
   ./codeql-runner-linux init \
   --repository sq2907/eShopOnWeb \
   --github-url https://github.com \
   --github-auth $(GitHub Token) \
     with:
      languages: ${{ matrix.language }} \
  displayName: 'Initialize CodeQL Executable and create a CodeQL database'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.sln'

- script: |
   ./codeql-runner-linux analyze \
   --repository sq2907/eShopOnWeb \
   --github-url https://github.com \
   --github-auth $(GitHub Token) \
   --commit $(Build.SourceVersion) \
   --ref $(Build.SourceBranch)
  displayName: 'Populate the CodeQL runner databases, analyze them, and upload the results to GitHub.'

